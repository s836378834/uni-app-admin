# node-sass 安装步骤：
# 1、校验本地node_modules中是否已安装node-sass，版本是否一致。
# 2、如未安装或版本不符，从npm源安装node-sass本体。
# 3、检测全局缓存和本地中是否有binding.node,如有即跳过安装。
# 4、没有binding.node则从github下载该二进制文件并将其缓存到全局。
# 5、假如binding.node下载失败，则尝试本地编译出该文件。
# 6、将版本信息写到package-lock.json。

# 由此看到，实际上node-sass依赖了一个二进制文件binding.node，从npm源安装完本体后还会从github下载binding.node。
# 因此安装node-sass相关的失败原因有以下几种：

# 原因一：npm源速度慢
# 由于众所周知的国内网络环境，从国内安装官方源的依赖包会很慢。可以将npm源设置成国内镜像源(如淘宝npm)

# 原因二：binding.node源无法访问或速度慢
# node-sass除了npm部分的代码，还会下载二进制文件binding.node，默认源是github，国内访问较慢,特殊时期甚至无法访问。我们也可以将其改成国内源。

# 原因三：node版本与node-sass版本不兼容
# node-sass版本兼容性并不好，老项目中依赖的node-sass很可能已经不兼容新的node，对应版本兼容如下(或参考官方仓库)：
#       NodeJS    Minimum node-sass version    Node Module
#       Node13              4.13+                  79
#       Node12              4.12+                  72
#       Node11              4.10+                  67
#       Node10              4.9+                   64
#       Node8               4.5.3+                 57

# 原因四：缓存中binding.node版本不一致
# 假如本地node版本改了，或在不同机器上运行，node版本不一致，会报类似错误：
# Found bindings for the following environments:
#       - Windows 64-bit with Node.js 6.x
# 这是因为原有binding.node缓存跟现node版本不一致。按提示npm rebuild node-sass或清除缓存重新安装即可。

# 原因五：安装失败后重新安装
# 安装失败后重新安装，有可能无权限删除已安装内容，此时npm uninstall node-sass或手动删掉原目录后再安装即可。

# 原因六：提示没有安装python、build失败等
# 假如拉取binding.node失败，node-sass会尝试在本地编译binding.node，过程就需要python。


# npm 镜像源
registry=https://registry.npm.taobao.org/

# binding.node 镜像源 (安装 node-sass 使用)
sass_binary_site=https://npm.taobao.org/mirrors/node-sass/
